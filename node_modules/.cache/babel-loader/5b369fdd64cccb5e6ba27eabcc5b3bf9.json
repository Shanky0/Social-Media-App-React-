{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/Frontend Task/React JS/socialmedia/src/Components/Feeds.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Tab, Tabs } from '@mui/material';\nimport React from 'react';\nimport { useState } from 'react';\nimport { Context } from '../App';\nimport AddPost from './AddPost';\nimport FeedsCard from './FeedsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feeds = () => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const {\n    details\n  } = Context();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flex: 4,\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(AddPost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: 'item one'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: 'item one'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: \"Item One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), details.map(val => {\n      return /*#__PURE__*/_jsxDEV(FeedsCard, {\n        val: val\n      }, val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 39\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feeds, \"ZbI4u1w4D9VO8WPA0g4veuP5Nho=\");\n\n_c = Feeds;\nexport default Feeds;\n\nconst TabPanel = () => {\n  return;\n};\n\n_c2 = TabPanel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Feeds\");\n$RefreshReg$(_c2, \"TabPanel\");","map":{"version":3,"names":["Box","Tab","Tabs","React","useState","Context","AddPost","FeedsCard","Feeds","value","setValue","details","map","val","id","TabPanel"],"sources":["/home/cedcoss/Desktop/Frontend Task/React JS/socialmedia/src/Components/Feeds.jsx"],"sourcesContent":["import { Box, Tab, Tabs } from '@mui/material'\nimport React from 'react'\nimport { useState } from 'react';\nimport { Context } from '../App'\nimport AddPost from './AddPost';\nimport FeedsCard from './FeedsCard';\n\nconst Feeds = () => {\n  const [value,setValue] = useState(0);\n  const { details } = Context();\n\n  return (\n    <Box flex={4} p={3} >\n      <AddPost />\n      <Tabs>\n        <Tab label={'item one'} />\n        <Tab label={'item one'} />\n        <TabPanel value={value} index={0} >\n          Item One\n        </TabPanel>\n      </Tabs>\n      {details.map((val) => { return (<FeedsCard val={val} key={val.id} />) })}\n    </Box>\n  )\n}\n\nexport default Feeds\n\n\nconst TabPanel = ()=>{\n\n  return\n}"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,CAAD,CAAjC;EACA,MAAM;IAAEO;EAAF,IAAcN,OAAO,EAA3B;EAEA,oBACE,QAAC,GAAD;IAAK,IAAI,EAAE,CAAX;IAAc,CAAC,EAAE,CAAjB;IAAA,wBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAA,wBACE,QAAC,GAAD;QAAK,KAAK,EAAE;MAAZ;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,GAAD;QAAK,KAAK,EAAE;MAAZ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,QAAD;QAAU,KAAK,EAAEI,KAAjB;QAAwB,KAAK,EAAE,CAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EASGE,OAAO,CAACC,GAAR,CAAaC,GAAD,IAAS;MAAE,oBAAQ,QAAC,SAAD;QAAW,GAAG,EAAEA;MAAhB,GAA0BA,GAAG,CAACC,EAA9B;QAAA;QAAA;QAAA;MAAA,QAAR;IAA+C,CAAtE,CATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAjBD;;GAAMN,K;;KAAAA,K;AAmBN,eAAeA,KAAf;;AAGA,MAAMO,QAAQ,GAAG,MAAI;EAEnB;AACD,CAHD;;MAAMA,Q"},"metadata":{},"sourceType":"module"}